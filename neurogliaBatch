#!/bin/bash

#run a pipeline job on the cluster
#pipeline jobs take subjids as args

if [ -n $SINGULARITY_IMG ]
then
	echo "Using env: $SINGULARITY_IMG"
else
	echo "SINGULARITY_IMG not defined! exiting..."
	exit -1
fi

if [ -n $SINGULARITY_BINDS ]
then
	echo "Using binds: $SINGULARITY_BINDS"
	BINDS="-B $SINGULARITY_BINDS"
else
	echo "Warning: SINGULARITY_BINDS not defined!"
	BINDS=""
fi


if [ "$#" -lt 2 ]
then 
  echo "Usage: $0 <name of pipeline script>  <subjid/list> <additional arguments ... if any> "
  exit 0
fi

output_dir=.

pipeline_script=$1

shift 1
if [ -f $1 ]
then
 subjids=`cat $1`
else
 subjids=$1
fi

shift 1

add_args=$@



echo ""
echo "Running with the following arguments:"
echo "  Pipeline script:  $pipeline_script"
echo "  Additional arguments: $@"
echo "  Subjects: "
echo "$subjids"
echo ""
echo "If correct, enter y"
read check
if [ ! "$check" = "y" ]
then
  echo "Quitting..."
  exit 0
else
  echo "Running Jobs... (with 30 sec interval between each submission)"

fi

scriptname=${pipeline_script##*/} #strip leading path

job_dir=$output_dir/jobs/`date +%Y_%m_%d_%-I%p`_${scriptname}
mkdir -p $job_dir



for subj in $subjids
do



name=$scriptname.$subj
job=$job_dir/$name.job
out=$job_dir/$name.out

echo "#!/bin/bash" > $job
echo cd `pwd` >> $job
echo singularity exec -B /project:/project $SINGULARITY_DEFAULT  $pipeline_script $add_args $subj >> $job

 echo sbatch -J $name  -D `pwd` --time=24:00:00 --cpus-per-task=8 --ntasks=1 --mem=32000 --account=rrg-akhanf --output=$out $job 
 sbatch -J $name  -D `pwd` --time=24:00:00 --cpus-per-task=8 --ntasks=1 --mem=32000 --account=rrg-akhanf --output=$out $job 

done



